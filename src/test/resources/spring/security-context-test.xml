<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
			
	<security:http auto-config="true">
		<!-- prevent from calling the following ressources from another domain-->
		<!-- child-src -->
		<!-- connect-src -->
		<!-- font-src -->
		<!-- img-src -->
		<!-- media-src -->
		<!-- object-src -->
		<!-- script-src -->
		<!-- style-src -->
		
		<!-- best policy should be to use a WAF in order to filter XSS, SQL injection attacks, ... -->
		<security:headers>
			<security:content-security-policy policy-directives="default-src 'self'" />
		</security:headers>
		
		<security:intercept-url pattern="/login*" access="permitAll" />
		<security:intercept-url pattern="/resources/**" access="permitAll" />
		<security:intercept-url pattern="/*" access="hasRole('ROLE_USER')" />
		<security:form-login 
			login-page="/login" 
			default-target-url="/home"
			authentication-failure-url="/login?action=error"
			username-parameter="username"
			password-parameter="password" />
		<security:logout logout-url="/logout" logout-success-url="/login?action=logout"/>
		<security:remember-me key="uniqueAndSecret" token-validity-seconds="86400"/>
		<security:csrf disabled="true"/>
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
	</security:authentication-manager>	
		
</beans:beans>